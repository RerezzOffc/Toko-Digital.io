var ScrollReveal = function () {
  "use strict";

  var r = {
    delay: 0,
    distance: "0",
    duration: 600,
    easing: "cubic-bezier(0.5, 0, 0, 1)",
    interval: 0,
    opacity: 0,
    origin: "bottom",
    rotate: {
      x: 0,
      y: 0,
      z: 0
    },
    scale: 1,
    cleanup: false,
    container: document.documentElement,
    desktop: true,
    mobile: true,
    reset: false,
    useDelay: "always",
    viewFactor: 0,
    viewOffset: {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
    afterReset: function () {},
    afterReveal: function () {},
    beforeReset: function () {},
    beforeReveal: function () {}
  };
  var n = {
    success: function () {
      document.documentElement.classList.add("sr");
      if (document.body) {
        document.body.style.height = "100%";
      } else {
        document.addEventListener("DOMContentLoaded", function () {
          document.body.style.height = "100%";
        });
      }
    },
    failure: function () {
      document.documentElement.classList.remove("sr");
      return {
        clean: function () {},
        destroy: function () {},
        reveal: function () {},
        sync: function () {},
        get noop() {
          return true;
        }
      };
    }
  };
  function o(e) {
    if (typeof window.Node == "object") {
      return e instanceof window.Node;
    } else {
      return e !== null && typeof e == "object" && typeof e.nodeType == "number" && typeof e.nodeName == "string";
    }
  }
  function u(e, t = document) {
    if (e instanceof Array) {
      return e.filter(o);
    }
    if (o(e)) {
      return [e];
    }
    n = e;
    i = Object.prototype.toString.call(n);
    if (typeof window.NodeList == "object" ? n instanceof window.NodeList : n !== null && typeof n == "object" && typeof n.length == "number" && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(i) && (n.length === 0 || o(n[0]))) {
      return Array.prototype.slice.call(e);
    }
    var n;
    var i;
    if (typeof e == "string") {
      try {
        var r = t.querySelectorAll(e);
        return Array.prototype.slice.call(r);
      } catch (e) {
        return [];
      }
    }
    return [];
  }
  function s(e) {
    return e !== null && e instanceof Object && (e.constructor === Object || Object.prototype.toString.call(e) === "[object Object]");
  }
  function f(n, i) {
    if (s(n)) {
      return Object.keys(n).forEach(function (e) {
        return i(n[e], e, n);
      });
    }
    if (n instanceof Array) {
      return n.forEach(function (e, t) {
        return i(e, t, n);
      });
    }
    throw new TypeError("Expected either an array or object literal.");
  }
  function h(e) {
    var t = [];
    for (var n = arguments.length - 1; n-- > 0;) {
      t[n] = arguments[n + 1];
    }
    if (this.constructor.debug && console) {
      var i = "%cScrollReveal: " + e;
      t.forEach(function (e) {
        return i += "\n â€” " + e;
      });
      console.log(i, "color: #ea654b;");
    }
  }
  function t() {
    var n = this;
    var i = {
      active: [],
      stale: []
    };
    var t = {
      active: [],
      stale: []
    };
    var r = {
      active: [],
      stale: []
    };
    try {
      f(u("[data-sr-id]"), function (e) {
        var t = parseInt(e.getAttribute("data-sr-id"));
        i.active.push(t);
      });
    } catch (e) {
      throw e;
    }
    f(this.store.elements, function (e) {
      if (i.active.indexOf(e.id) === -1) {
        i.stale.push(e.id);
      }
    });
    f(i.stale, function (e) {
      return delete n.store.elements[e];
    });
    f(this.store.elements, function (e) {
      if (r.active.indexOf(e.containerId) === -1) {
        r.active.push(e.containerId);
      }
      if (e.hasOwnProperty("sequence") && t.active.indexOf(e.sequence.id) === -1) {
        t.active.push(e.sequence.id);
      }
    });
    f(this.store.containers, function (e) {
      if (r.active.indexOf(e.id) === -1) {
        r.stale.push(e.id);
      }
    });
    f(r.stale, function (e) {
      var t = n.store.containers[e].node;
      t.removeEventListener("scroll", n.delegate);
      t.removeEventListener("resize", n.delegate);
      delete n.store.containers[e];
    });
    f(this.store.sequences, function (e) {
      if (t.active.indexOf(e.id) === -1) {
        t.stale.push(e.id);
      }
    });
    f(t.stale, function (e) {
      return delete n.store.sequences[e];
    });
  }
  function N(e) {
    if (e.constructor !== Array) {
      throw new TypeError("Expected array.");
    }
    if (e.length === 16) {
      return e;
    }
    if (e.length !== 6) {
      throw new RangeError("Expected array with either 6 or 16 values.");
    }
    var t = z();
    t[0] = e[0];
    t[1] = e[1];
    t[4] = e[2];
    t[5] = e[3];
    t[12] = e[4];
    t[13] = e[5];
    return t;
  }
  function z() {
    var e = [];
    for (var t = 0; t < 16; t++) {
      if (t % 5 == 0) {
        e.push(1);
      } else {
        e.push(0);
      }
    }
    return e;
  }
  function F(e, t) {
    var n = N(e);
    var i = N(t);
    var r = [];
    for (var o = 0; o < 4; o++) {
      var s = [n[o], n[o + 4], n[o + 8], n[o + 12]];
      for (var a = 0; a < 4; a++) {
        var c = a * 4;
        var l = [i[c], i[c + 1], i[c + 2], i[c + 3]];
        var d = s[0] * l[0] + s[1] * l[1] + s[2] * l[2] + s[3] * l[3];
        r[o + c] = d;
      }
    }
    return r;
  }
  function D(e, t) {
    var n = z();
    n[0] = e;
    n[5] = typeof t == "number" ? t : e;
    return n;
  }
  var S = function () {
    var n = {};
    var i = document.documentElement.style;
    function e(e, t = i) {
      if (e && typeof e == "string") {
        if (n[e]) {
          return n[e];
        }
        if (typeof t[e] == "string") {
          return n[e] = e;
        }
        if (typeof t["-webkit-" + e] == "string") {
          return n[e] = "-webkit-" + e;
        }
        throw new RangeError("Unable to find \"" + e + "\" style property.");
      }
      throw new TypeError("Expected a string.");
    }
    e.clearCache = function () {
      return n = {};
    };
    return e;
  }();
  function p(e) {
    var t = window.getComputedStyle(e.node);
    var n = t.position;
    var i = e.config;
    var r = {};
    var o = (e.node.getAttribute("style") || "").match(/[\w-]+\s*:\s*[^;]+\s*/gi) || [];
    r.computed = o ? o.map(function (e) {
      return e.trim();
    }).join("; ") + ";" : "";
    r.generated = o.some(function (e) {
      return e.match(/visibility\s?:\s?visible/i);
    }) ? r.computed : o.concat(["visibility: visible"]).map(function (e) {
      return e.trim();
    }).join("; ") + ";";
    var s;
    var a;
    var c;
    var l;
    var d;
    var u;
    var f;
    var h;
    var p;
    var m;
    var y;
    var v;
    var g;
    var b = parseFloat(t.opacity);
    var w = isNaN(parseFloat(i.opacity)) ? parseFloat(t.opacity) : parseFloat(i.opacity);
    var E = {
      computed: b !== w ? "opacity: " + b + ";" : "",
      generated: b !== w ? "opacity: " + w + ";" : ""
    };
    var j = [];
    if (parseFloat(i.distance)) {
      var T = i.origin === "top" || i.origin === "bottom" ? "Y" : "X";
      var k = i.distance;
      if (i.origin === "top" || i.origin === "left") {
        k = /^-/.test(k) ? k.substr(1) : "-" + k;
      }
      var O = k.match(/(^-?\d+\.?\d?)|(em$|px$|%$)/g);
      var x = O[0];
      switch (O[1]) {
        case "em":
          k = parseInt(t.fontSize) * x;
          break;
        case "px":
          k = x;
          break;
        case "%":
          k = T === "Y" ? e.node.getBoundingClientRect().height * x / 100 : e.node.getBoundingClientRect().width * x / 100;
          break;
        default:
          throw new RangeError("Unrecognized or missing distance unit.");
      }
      if (T === "Y") {
        j.push((c = k, (l = z())[13] = c, l));
      } else {
        j.push((s = k, (a = z())[12] = s, a));
      }
    }
    if (i.rotate.x) {
      j.push((d = i.rotate.x, u = Math.PI / 180 * d, (f = z())[5] = f[10] = Math.cos(u), f[6] = f[9] = Math.sin(u), f[9] *= -1, f));
    }
    if (i.rotate.y) {
      j.push((h = i.rotate.y, p = Math.PI / 180 * h, (m = z())[0] = m[10] = Math.cos(p), m[2] = m[8] = Math.sin(p), m[2] *= -1, m));
    }
    if (i.rotate.z) {
      j.push((y = i.rotate.z, v = Math.PI / 180 * y, (g = z())[0] = g[5] = Math.cos(v), g[1] = g[4] = Math.sin(v), g[4] *= -1, g));
    }
    if (i.scale !== 1) {
      if (i.scale === 0) {
        j.push(D(0.0002));
      } else {
        j.push(D(i.scale));
      }
    }
    var R = {};
    if (j.length) {
      R.property = S("transform");
      R.computed = {
        raw: t[R.property],
        matrix: function (e) {
          if (typeof e == "string") {
            var t = e.match(/matrix(3d)?\(([^)]+)\)/);
            if (t) {
              return N(t[2].split(", ").map(parseFloat));
            }
          }
          return z();
        }(t[R.property])
      };
      j.unshift(R.computed.matrix);
      var q = j.reduce(F);
      R.generated = {
        initial: R.property + ": matrix3d(" + q.join(", ") + ");",
        final: R.property + ": matrix3d(" + R.computed.matrix.join(", ") + ");"
      };
    } else {
      R.generated = {
        initial: "",
        final: ""
      };
    }
    var A = {};
    if (E.generated || R.generated.initial) {
      A.property = S("transition");
      A.computed = t[A.property];
      A.fragments = [];
      var P = i.delay;
      var L = i.duration;
      var M = i.easing;
      if (E.generated) {
        A.fragments.push({
          delayed: "opacity " + L / 1000 + "s " + M + " " + P / 1000 + "s",
          instant: "opacity " + L / 1000 + "s " + M + " 0s"
        });
      }
      if (R.generated.initial) {
        A.fragments.push({
          delayed: R.property + " " + L / 1000 + "s " + M + " " + P / 1000 + "s",
          instant: R.property + " " + L / 1000 + "s " + M + " 0s"
        });
      }
      if (A.computed && !A.computed.match(/all 0s|none 0s/)) {
        A.fragments.unshift({
          delayed: A.computed,
          instant: A.computed
        });
      }
      var I = A.fragments.reduce(function (e, t, n) {
        e.delayed += n === 0 ? t.delayed : ", " + t.delayed;
        e.instant += n === 0 ? t.instant : ", " + t.instant;
        return e;
      }, {
        delayed: "",
        instant: ""
      });
      A.generated = {
        delayed: A.property + ": " + I.delayed + ";",
        instant: A.property + ": " + I.instant + ";"
      };
    } else {
      A.generated = {
        delayed: "",
        instant: ""
      };
    }
    return {
      inline: r,
      opacity: E,
      position: n,
      transform: R,
      transition: A
    };
  }
  function m(r, e) {
    e.split(";").forEach(function (e) {
      var t = e.split(":");
      var n = t[0];
      var i = t.slice(1);
      if (n && i) {
        r.style[n.trim()] = i.join(":");
      }
    });
  }
  function y(e) {
    var i;
    var r = this;
    try {
      f(u(e), function (e) {
        var t = e.getAttribute("data-sr-id");
        if (t !== null) {
          i = true;
          var n = r.store.elements[t];
          if (n.callbackTimer) {
            window.clearTimeout(n.callbackTimer.clock);
          }
          m(n.node, n.styles.inline.generated);
          e.removeAttribute("data-sr-id");
          delete r.store.elements[t];
        }
      });
    } catch (e) {
      return h.call(this, "Clean failed.", e.message);
    }
    if (i) {
      try {
        t.call(this);
      } catch (e) {
        return h.call(this, "Clean failed.", e.message);
      }
    }
  }
  function v(n) {
    var e = [];
    for (var t = arguments.length - 1; t-- > 0;) {
      e[t] = arguments[t + 1];
    }
    if (s(n)) {
      f(e, function (e) {
        f(e, function (e, t) {
          if (s(e)) {
            if (!n[t] || !s(n[t])) {
              n[t] = {};
            }
            v(n[t], e);
          } else {
            n[t] = e;
          }
        });
      });
      return n;
    }
    throw new TypeError("Target must be an object literal.");
  }
  function g(e = navigator.userAgent) {
    return /Android|iPhone|iPad|iPod/i.test(e);
  }
  var e;
  e = 0;
  function b() {
    return e++;
  }
  function w() {
    var n = this;
    t.call(this);
    f(this.store.elements, function (e) {
      var t = [e.styles.inline.generated];
      if (e.visible) {
        t.push(e.styles.opacity.computed);
        t.push(e.styles.transform.generated.final);
        e.revealed = true;
      } else {
        t.push(e.styles.opacity.generated);
        t.push(e.styles.transform.generated.initial);
        e.revealed = false;
      }
      m(e.node, t.filter(function (e) {
        return e !== "";
      }).join(" "));
    });
    f(this.store.containers, function (e) {
      var t = e.node === document.documentElement ? window : e.node;
      t.addEventListener("scroll", n.delegate);
      t.addEventListener("resize", n.delegate);
    });
    this.delegate();
    this.initTimeout = null;
  }
  function c(e, t = {}) {
    var n = t.pristine || this.pristine;
    var i = e.config.useDelay === "always" || e.config.useDelay === "onload" && n || e.config.useDelay === "once" && !e.seen;
    var r = e.visible && !e.revealed;
    var o = !e.visible && e.revealed && e.config.reset;
    if (t.reveal || r) {
      return function (e, t) {
        var n = [e.styles.inline.generated, e.styles.opacity.computed, e.styles.transform.generated.final];
        if (t) {
          n.push(e.styles.transition.generated.delayed);
        } else {
          n.push(e.styles.transition.generated.instant);
        }
        e.revealed = e.seen = true;
        m(e.node, n.filter(function (e) {
          return e !== "";
        }).join(" "));
        a.call(this, e, t);
      }.call(this, e, i);
    } else if (t.reset || o) {
      return function (e) {
        var t = [e.styles.inline.generated, e.styles.opacity.generated, e.styles.transform.generated.initial, e.styles.transition.generated.instant];
        e.revealed = false;
        m(e.node, t.filter(function (e) {
          return e !== "";
        }).join(" "));
        a.call(this, e);
      }.call(this, e);
    } else {
      return undefined;
    }
  }
  function a(e, t) {
    var n = this;
    var i = t ? e.config.duration + e.config.delay : e.config.duration;
    var r = e.revealed ? e.config.beforeReveal : e.config.beforeReset;
    var o = e.revealed ? e.config.afterReveal : e.config.afterReset;
    var s = 0;
    if (e.callbackTimer) {
      s = Date.now() - e.callbackTimer.start;
      window.clearTimeout(e.callbackTimer.clock);
    }
    r(e.node);
    e.callbackTimer = {
      start: Date.now(),
      clock: window.setTimeout(function () {
        o(e.node);
        e.callbackTimer = null;
        if (e.revealed && !e.config.reset && e.config.cleanup) {
          y.call(n, e.node);
        }
      }, i - s)
    };
  }
  function l(e, t = this.pristine) {
    if (!e.visible && e.revealed && e.config.reset) {
      return c.call(this, e, {
        reset: true
      });
    }
    var n = this.store.sequences[e.sequence.id];
    var i = e.sequence.index;
    if (n) {
      var r = new d(n, "visible", this.store);
      var o = new d(n, "revealed", this.store);
      n.models = {
        visible: r,
        revealed: o
      };
      if (!o.body.length) {
        var s = n.members[r.body[0]];
        var a = this.store.elements[s];
        if (a) {
          j.call(this, n, r.body[0], -1, t);
          j.call(this, n, r.body[0], 1, t);
          return c.call(this, a, {
            reveal: true,
            pristine: t
          });
        }
      }
      if (!n.blocked.head && i === [].concat(o.head).pop() && i >= [].concat(r.body).shift()) {
        j.call(this, n, i, -1, t);
        return c.call(this, e, {
          reveal: true,
          pristine: t
        });
      }
      if (!n.blocked.foot && i === [].concat(o.foot).shift() && i <= [].concat(r.body).pop()) {
        j.call(this, n, i, 1, t);
        return c.call(this, e, {
          reveal: true,
          pristine: t
        });
      }
    }
  }
  function E(e) {
    var t = Math.abs(e);
    if (isNaN(t)) {
      throw new RangeError("Invalid sequence interval.");
    }
    this.id = b();
    this.interval = Math.max(t, 16);
    this.members = [];
    this.models = {};
    this.blocked = {
      head: false,
      foot: false
    };
  }
  function d(e, i, r) {
    var o = this;
    this.head = [];
    this.body = [];
    this.foot = [];
    f(e.members, function (e, t) {
      var n = r.elements[e];
      if (n && n[i]) {
        o.body.push(t);
      }
    });
    if (this.body.length) {
      f(e.members, function (e, t) {
        var n = r.elements[e];
        if (n && !n[i]) {
          if (t < o.body[0]) {
            o.head.push(t);
          } else {
            o.foot.push(t);
          }
        }
      });
    }
  }
  function j(e, t, n, i) {
    var r = this;
    var o = ["head", null, "foot"][1 + n];
    var s = e.members[t + n];
    var a = this.store.elements[s];
    e.blocked[o] = true;
    setTimeout(function () {
      e.blocked[o] = false;
      if (a) {
        l.call(r, a, i);
      }
    }, e.interval);
  }
  function i(e, a, t) {
    var c = this;
    if (a === undefined) {
      a = {};
    }
    if (t === undefined) {
      t = false;
    }
    var l;
    var d = [];
    var n = a.interval || r.interval;
    try {
      if (n) {
        l = new E(n);
      }
      var i = u(e);
      if (!i.length) {
        throw new Error("Invalid reveal target.");
      }
      f(i.reduce(function (e, t) {
        var n = {};
        var i = t.getAttribute("data-sr-id");
        if (i) {
          v(n, c.store.elements[i]);
          m(n.node, n.styles.inline.computed);
        } else {
          n.id = b();
          n.node = t;
          n.seen = false;
          n.revealed = false;
          n.visible = false;
        }
        var r = v({}, n.config || c.defaults, a);
        if (!r.mobile && g() || !r.desktop && !g()) {
          if (i) {
            y.call(c, n);
          }
          return e;
        }
        var o;
        var s = u(r.container)[0];
        if (!s) {
          throw new Error("Invalid container.");
        }
        if (s.contains(t)) {
          if ((o = function (t) {
            var e = [];
            var n = arguments.length - 1;
            while (n-- > 0) {
              e[n] = arguments[n + 1];
            }
            var i = null;
            f(e, function (e) {
              f(e, function (e) {
                if (i === null && e.node === t) {
                  i = e.id;
                }
              });
            });
            return i;
          }(s, d, c.store.containers)) === null) {
            o = b();
            d.push({
              id: o,
              node: s
            });
          }
          n.config = r;
          n.containerId = o;
          n.styles = p(n);
          if (l) {
            n.sequence = {
              id: l.id,
              index: l.members.length
            };
            l.members.push(n.id);
          }
          e.push(n);
        }
        return e;
      }, []), function (e) {
        (c.store.elements[e.id] = e).node.setAttribute("data-sr-id", e.id);
      });
    } catch (e) {
      return h.call(this, "Reveal failed.", e.message);
    }
    f(d, function (e) {
      c.store.containers[e.id] = {
        id: e.id,
        node: e.node
      };
    });
    if (l) {
      this.store.sequences[l.id] = l;
    }
    if (t !== true) {
      this.store.history.push({
        target: e,
        options: a
      });
      if (this.initTimeout) {
        window.clearTimeout(this.initTimeout);
      }
      this.initTimeout = window.setTimeout(w.bind(this), 0);
    }
  }
  var T;
  var k = Math.sign || function (e) {
    return (e > 0) - (e < 0) || +e;
  };
  T = Date.now();
  function O(e) {
    var t = Date.now();
    if (t - T > 16) {
      e(T = t);
    } else {
      setTimeout(function () {
        return O(e);
      }, 0);
    }
  }
  var x = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || O;
  function R(e, t) {
    var n = t ? e.node.clientHeight : e.node.offsetHeight;
    var i = t ? e.node.clientWidth : e.node.offsetWidth;
    for (var r = 0, o = 0, s = e.node; isNaN(s.offsetTop) || (r += s.offsetTop), isNaN(s.offsetLeft) || (o += s.offsetLeft), s = s.offsetParent;);
    return {
      bounds: {
        top: r,
        right: o + i,
        bottom: r + n,
        left: o
      },
      height: n,
      width: i
    };
  }
  function q(e, t) {
    var i = this;
    if (e === undefined) {
      e = {
        type: "init"
      };
    }
    if (t === undefined) {
      t = this.store.elements;
    }
    x(function () {
      var n = e.type === "init" || e.type === "resize";
      f(i.store.containers, function (e) {
        if (n) {
          e.geometry = R.call(i, e, true);
        }
        var t = function (e) {
          var t;
          var n;
          n = e.node === document.documentElement ? (t = window.pageYOffset, window.pageXOffset) : (t = e.node.scrollTop, e.node.scrollLeft);
          return {
            top: t,
            left: n
          };
        }.call(i, e);
        if (e.scroll) {
          e.direction = {
            x: k(t.left - e.scroll.left),
            y: k(t.top - e.scroll.top)
          };
        }
        e.scroll = t;
      });
      f(t, function (e) {
        if (n || e.geometry === undefined) {
          e.geometry = R.call(i, e);
        }
        e.visible = function (e = {}) {
          var t = this.store.containers[e.containerId];
          if (t) {
            var n = Math.max(0, Math.min(1, e.config.viewFactor));
            var i = e.config.viewOffset;
            var r = e.geometry.bounds.top + e.geometry.height * n;
            var o = e.geometry.bounds.right - e.geometry.width * n;
            var s = e.geometry.bounds.bottom - e.geometry.height * n;
            var a = e.geometry.bounds.left + e.geometry.width * n;
            var c = t.geometry.bounds.top + t.scroll.top + i.top;
            var l = t.geometry.bounds.right + t.scroll.left - i.right;
            var d = t.geometry.bounds.bottom + t.scroll.top - i.bottom;
            var u = t.geometry.bounds.left + t.scroll.left + i.left;
            return r < d && u < o && c < s && a < l || e.styles.position === "fixed";
          }
        }.call(i, e);
      });
      f(t, function (e) {
        if (e.sequence) {
          l.call(i, e);
        } else {
          c.call(i, e);
        }
      });
      i.pristine = false;
    });
  }
  var A;
  var P;
  var L;
  var M;
  var I;
  var C;
  var W;
  var Y;
  var $ = "4.0.9";
  function H(e) {
    var t;
    if (e === undefined) {
      e = {};
    }
    if (this === undefined || Object.getPrototypeOf(this) !== H.prototype) {
      return new H(e);
    }
    if (!H.isSupported()) {
      h.call(this, "Instantiation failed.", "This browser is not supported.");
      return n.failure();
    }
    try {
      t = v({}, C || r, e);
    } catch (e) {
      h.call(this, "Invalid configuration.", e.message);
      return n.failure();
    }
    try {
      if (!u(t.container)[0]) {
        throw new Error("Invalid container.");
      }
    } catch (e) {
      h.call(this, e.message);
      return n.failure();
    }
    if (!(C = t).mobile && g() || !C.desktop && !g()) {
      h.call(this, "This device is disabled.", "desktop: " + C.desktop, "mobile: " + C.mobile);
      return n.failure();
    } else {
      n.success();
      this.store = {
        containers: {},
        elements: {},
        history: [],
        sequences: {}
      };
      this.pristine = true;
      A = A || q.bind(this);
      P = P || function () {
        var n = this;
        f(this.store.elements, function (e) {
          m(e.node, e.styles.inline.generated);
          e.node.removeAttribute("data-sr-id");
        });
        f(this.store.containers, function (e) {
          var t = e.node === document.documentElement ? window : e.node;
          t.removeEventListener("scroll", n.delegate);
          t.removeEventListener("resize", n.delegate);
        });
        this.store = {
          containers: {},
          elements: {},
          history: [],
          sequences: {}
        };
      }.bind(this);
      L = L || i.bind(this);
      M = M || y.bind(this);
      I = I || function () {
        var t = this;
        f(this.store.history, function (e) {
          i.call(t, e.target, e.options, true);
        });
        w.call(this);
      }.bind(this);
      Object.defineProperty(this, "delegate", {
        get: function () {
          return A;
        }
      });
      Object.defineProperty(this, "destroy", {
        get: function () {
          return P;
        }
      });
      Object.defineProperty(this, "reveal", {
        get: function () {
          return L;
        }
      });
      Object.defineProperty(this, "clean", {
        get: function () {
          return M;
        }
      });
      Object.defineProperty(this, "sync", {
        get: function () {
          return I;
        }
      });
      Object.defineProperty(this, "defaults", {
        get: function () {
          return C;
        }
      });
      Object.defineProperty(this, "version", {
        get: function () {
          return $;
        }
      });
      Object.defineProperty(this, "noop", {
        get: function () {
          return false;
        }
      });
      return Y ||= this;
    }
  }
  H.isSupported = function () {
    return ("transform" in (t = document.documentElement.style) || "WebkitTransform" in t) && ("transition" in (e = document.documentElement.style) || "WebkitTransition" in e);
    var e;
    var t;
  };
  Object.defineProperty(H, "debug", {
    get: function () {
      return W || false;
    },
    set: function (e) {
      return W = typeof e == "boolean" ? e : W;
    }
  });
  H();
  return H;
}();
